
// The version to use 
#version 450
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_ARB_gpu_shader_fp64 : enable


/* I hope someday we could use gl_SubgroupSize as local_size */
#define SUBGROUP_SIZE 32
// The execution structure
layout (local_size_x = SUBGROUP_SIZE) in;


// The buffers are provided via the tensors
layout(binding = 0) buffer bufA { float x_coordinates[]; };
layout(binding = 1) buffer bufB { float y_coordinates[]; };
layout(binding = 2) buffer bufC { float x_speeds[]; };
layout(binding = 3) buffer bufD { float y_speeds[]; };


layout( push_constant ) uniform constants {
    float timestep;
};

void main() {

    const uint i = gl_GlobalInvocationID.x;

    // New position from new velocity
    x_coordinates[i] += x_speeds[i] * timestep;
    y_coordinates[i] += y_speeds[i] * timestep;
        
} 
